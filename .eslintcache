[{"/Users/macbook/Desktop/test_sysale/src/index.js":"1","/Users/macbook/Desktop/test_sysale/src/App.js":"2","/Users/macbook/Desktop/test_sysale/src/reportWebVitals.js":"3","/Users/macbook/Desktop/test_sysale/src/redux/store.js":"4","/Users/macbook/Desktop/test_sysale/src/redux/rootReducer.js":"5","/Users/macbook/Desktop/test_sysale/src/redux/Shopping/shopping-reducer.js":"6","/Users/macbook/Desktop/test_sysale/src/redux/Shopping/shopping-types.js":"7","/Users/macbook/Desktop/test_sysale/src/components/Products/Products.js":"8","/Users/macbook/Desktop/test_sysale/src/components/Navbar/Navbar.js":"9","/Users/macbook/Desktop/test_sysale/src/components/Products/Product.js":"10","/Users/macbook/Desktop/test_sysale/src/redux/Shopping/shopping-actions.js":"11","/Users/macbook/Desktop/test_sysale/src/components/Cart/Cart.js":"12","/Users/macbook/Desktop/test_sysale/src/components/Cart/Carts.js":"13"},{"size":748,"mtime":1611654848712,"results":"14","hashOfConfig":"15"},{"size":532,"mtime":1611732779218,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1611653858443,"results":"17","hashOfConfig":"15"},{"size":224,"mtime":1611655201351,"results":"18","hashOfConfig":"15"},{"size":196,"mtime":1611655781293,"results":"19","hashOfConfig":"15"},{"size":3455,"mtime":1611698357291,"results":"20","hashOfConfig":"15"},{"size":188,"mtime":1611692847720,"results":"21","hashOfConfig":"15"},{"size":549,"mtime":1611674616663,"results":"22","hashOfConfig":"15"},{"size":1107,"mtime":1611732779215,"results":"23","hashOfConfig":"15"},{"size":3980,"mtime":1611732061381,"results":"24","hashOfConfig":"15"},{"size":702,"mtime":1611692847721,"results":"25","hashOfConfig":"15"},{"size":3766,"mtime":1611690967876,"results":"26","hashOfConfig":"15"},{"size":1357,"mtime":1611687039041,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1nh61e3",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/macbook/Desktop/test_sysale/src/index.js",[],["57","58"],"/Users/macbook/Desktop/test_sysale/src/App.js",[],"/Users/macbook/Desktop/test_sysale/src/reportWebVitals.js",[],"/Users/macbook/Desktop/test_sysale/src/redux/store.js",[],"/Users/macbook/Desktop/test_sysale/src/redux/rootReducer.js",[],"/Users/macbook/Desktop/test_sysale/src/redux/Shopping/shopping-reducer.js",[],"/Users/macbook/Desktop/test_sysale/src/redux/Shopping/shopping-types.js",[],"/Users/macbook/Desktop/test_sysale/src/components/Products/Products.js",[],"/Users/macbook/Desktop/test_sysale/src/components/Navbar/Navbar.js",[],"/Users/macbook/Desktop/test_sysale/src/components/Products/Product.js",["59"],"import React from 'react';\nimport \"./Products.sass\";\nimport libraIcon from \"../../img/Vector.png\";\nimport {NavLink} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {addToCart} from \"../../redux/Shopping/shopping-actions\";\nimport {TransformWrapper, TransformComponent} from \"react-zoom-pan-pinch\";\n\nconst Product = ({productData, addToCart}) => {\n\n    return (\n        <div className=\"containerProduct\">\n            <div className=\"product\">\n                <div className=\"btnNew\">\n                    <div>new</div>\n                </div>\n                <div className=\"imgContainer\">\n\n                        <TransformWrapper\n                            defaultScale={1}\n                            defaultPositionX={100}\n                            defaultPositionY={200}\n                        >\n                            <TransformComponent>\n                                <img src={productData.img}\n                                     alt={`image product${productData.id}`}\n                                     style={{width: \"100%\"}}\n                                />\n                            </TransformComponent>\n                        </TransformWrapper>\n\n                </div>\n                <div className=\"btnIcon\">\n                    <div>\n                        <NavLink to=\"/\"><img src={libraIcon} alt=\"libraIcon\"/></NavLink>\n                    </div>\n                </div>\n            </div>\n            <div className=\"descriptionContainer\">\n                <h2>{productData.title}</h2>\n                <p>{productData.description}</p>\n            </div>\n\n            <div className=\"priceColorContainer\">\n\n                <div className=\"colorContainer\"\n\n                >\n                    <div className=\"colorArrowContainer\">\n                        <h5>{productData.colorDefault}</h5>\n                        <ul className=\"color\">\n                            {productData.colors.map(((color, index) => {\n                                return (\n                                    <li key={index}>\n                                        <div>{color}</div>\n                                    </li>\n                                )\n                            }))}\n                        </ul>\n                    </div>\n                    <div className=\"arrowContainer\">\n                        <div className=\"arrowDown\"/>\n                    </div>\n                </div>\n                <div className=\"price\">{productData.price} грн</div>\n            </div>\n\n            <div className=\"capacityContainer\" >\n                {productData.capacities.map((capacity, index) => {\n                    return (\n                        <div className=\"checkboxContainer\" key={index}>\n                            <input type=\"checkbox\"\n                                   id={`checkbox${productData.id}-${index}`}\n                                   name={`checkbox${productData.id}-${index}`}\n                            />\n                            <label htmlFor={`checkbox${productData.id}-${index}`} className=\"checkbox\">\n                                <span>{capacity} мл</span>\n                            </label>\n                        </div>\n                    )\n                })}\n            </div>\n\n            <div className=\"countContainer\">\n                {/*<div className=\"countProduct\">*/}\n                {/*    <div onClick={onClickHandlerMinus}>-</div>*/}\n                {/*    <div onChange={onChangeHandler}>{qty}</div>*/}\n                {/*    <div onClick={ onClickHandlerPlus }>+</div>*/}\n                {/*</div>*/}\n                <div className=\"btnBuy\" onClick={() => {\n                    addToCart(productData.id)\n                }}>купить</div>\n            </div>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addToCart: (id) => dispatch(addToCart(id)),\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Product);\n","/Users/macbook/Desktop/test_sysale/src/redux/Shopping/shopping-actions.js",[],"/Users/macbook/Desktop/test_sysale/src/components/Cart/Cart.js",["60"],"import React, {useState} from 'react';\nimport \"./Cart.sass\";\nimport {connect} from 'react-redux';\nimport {removeFromCart, adjustQty} from '../../redux/Shopping/shopping-actions';\n\nconst Cart = ({cartsData, removeFromCart, adjustQty}) => {\n\n    const [value, setValue] = useState(cartsData.qty);\n\n    const onClickHandlerMinus = () => {\n        let newQty = value - 1\n        if (newQty > 0) {\n            setValue(newQty)\n            adjustQty(cartsData.id, newQty)\n        } else {\n            setValue(value)\n            adjustQty(cartsData.id, value)\n        }\n    }\n\n    const onClickHandlerPlus = () => {\n        let newQty = value + 1\n            setValue(newQty)\n            adjustQty(cartsData.id, newQty)\n    }\n\n    const onChangeHandler = (e) => {\n        setValue(e.target.value);\n        adjustQty(cartsData.id, e.target.value)\n    }\n\n    return (\n        <div className=\"cart\">\n\n            <div className=\"product\">\n                <img src={cartsData.img} alt={`image product${cartsData.id}`}/>\n            </div>\n\n            <div className=\"cartDescription\">\n                <div className=\"descriptionContainer\">\n                    <h2>{cartsData.title}</h2>\n                    <p>{cartsData.description}</p>\n                </div>\n\n                <div className=\"priceColorContainer\">\n                    <div className=\"colorContainer\">\n                        <div className=\"colorArrowContainer\">\n                            <h5>color</h5>\n                            <ul className=\"color\">\n                                {cartsData.colors.map(((color, index) => {\n                                    return (\n                                        <li key={index}>\n                                            <div>{color}</div>\n                                        </li>\n                                    )\n                                }))}\n                            </ul>\n                        </div>\n                        <div className=\"arrowContainer\">\n                            <div className=\"arrowDown\"/>\n                        </div>\n                    </div>\n                    <div className=\"price\">{cartsData.price} грн</div>\n                </div>\n\n                <div className=\"capacityContainer\">\n                    {cartsData.capacities.map((capacity, index) => {\n                        return (\n                            <div className=\"checkboxContainer\" key={index}>\n                                <input type=\"checkbox\"\n                                       id={`checkbox${cartsData.id}-${index}`}\n                                       name={`checkbox${cartsData.id}-${index}`}\n                                />\n                                <label htmlFor={`checkbox${cartsData.id}-${index}`} className=\"checkbox\">\n                                    <span>{capacity} мл</span>\n                                </label>\n                            </div>\n                        )\n                    })}\n                </div>\n\n                <div className=\"countContainer\">\n                    <div className=\"countProduct\">\n                        <div onClick={onClickHandlerMinus}>-</div>\n                        <div onChange={onChangeHandler}>{value}</div>\n                        <div onClick={onClickHandlerPlus}>+</div>\n                    </div>\n                    <div className=\"btnBuy\" onClick={() => removeFromCart(cartsData.id)}>удалить</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        removeFromCart: (id) => dispatch(removeFromCart(id)),\n        adjustQty: (id, value) => dispatch(adjustQty(id, value)),\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Cart);\n","/Users/macbook/Desktop/test_sysale/src/components/Cart/Carts.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":25,"column":33,"nodeType":"67","endLine":28,"endColumn":35},{"ruleId":"65","severity":1,"message":"66","line":36,"column":17,"nodeType":"67","endLine":36,"endColumn":80},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]